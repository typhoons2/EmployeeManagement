// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QL_NhanVien.DataAccess.Entities;

#nullable disable

namespace QL_NhanVien.Migrations
{
    [DbContext(typeof(QLNhanVienContext))]
    partial class QLNhanVienContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.ActualSalary", b =>
                {
                    b.Property<int>("ActualSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActualSalaryId"));

                    b.Property<decimal?>("ContractSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("DaysOff")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryAfterDeductions")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("ActualSalaryId")
                        .HasName("PK__ActualSa__C60C25303867113D");

                    b.HasIndex("UserId");

                    b.ToTable("ActualSalaries");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.AttachedFile", b =>
                {
                    b.Property<int>("AttachedFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachedFileId"));

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("AttachedFileId")
                        .HasName("PK__Attached__4A7D88DD5D8AFA98");

                    b.HasIndex("SubmissionId");

                    b.ToTable("AttachedFiles");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<string>("ClaimName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ClaimId")
                        .HasName("PK_Claims");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.EmailConfirmation", b =>
                {
                    b.Property<int>("EmailConfirmationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailConfirmationId"));

                    b.Property<string>("ConfirmationCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmailConfirmationId")
                        .HasName("PK__EmailCon__A04DCE811CB28412");

                    b.HasIndex("UserId");

                    b.ToTable("EmailConfirmations");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.RefreshToken", b =>
                {
                    b.Property<int>("RefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefreshTokenId"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpierTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RefToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RefreshTokenId")
                        .HasName("PK__RefreshT__F5845E393A8DF4A2");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1AA9F669A2");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.RoleClaim", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "ClaimId")
                        .HasName("PK_RoleClaims");

                    b.HasIndex("ClaimId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<string>("Heading")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubmissionBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubmissionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubmissionId")
                        .HasName("PK__Submissi__449EE12580271F89");

                    b.HasIndex("SubmissionTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.SubmissionType", b =>
                {
                    b.Property<int>("SubmissionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionTypeId"));

                    b.Property<string>("SubmissionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SubmissionTypeId")
                        .HasName("PK__Submissi__F2662978906E3BFF");

                    b.ToTable("SubmissionTypes");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ConfirmationCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("ContractSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("DaysOff")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmailConfirmationCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("GoogleId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TokenCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TokenExpires")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C3F0EC57D");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.ActualSalary", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.User", "User")
                        .WithMany("ActualSalaries")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ActualSal__UserI__44FF419A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.AttachedFile", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.Submission", "Submission")
                        .WithMany("AttachedFiles")
                        .HasForeignKey("SubmissionId")
                        .HasConstraintName("FK__AttachedF__Submi__4D94879B");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.EmailConfirmation", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.User", "User")
                        .WithMany("EmailConfirmations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__EmailConf__UserI__5DCAEF64");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.RefreshToken", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__RefreshTo__UserI__4222D4EF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.RoleClaim", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.Claim", "Claim")
                        .WithMany("RoleClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QL_NhanVien.DataAccess.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Submission", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.SubmissionType", "SubmissionType")
                        .WithMany("Submissions")
                        .HasForeignKey("SubmissionTypeId")
                        .HasConstraintName("FK__Submissio__Submi__4AB81AF0");

                    b.HasOne("QL_NhanVien.DataAccess.Entities.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Submissio__UserI__49C3F6B7");

                    b.Navigation("SubmissionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.User", b =>
                {
                    b.HasOne("QL_NhanVien.DataAccess.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleId__398D8EEE");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Claim", b =>
                {
                    b.Navigation("RoleClaims");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.Submission", b =>
                {
                    b.Navigation("AttachedFiles");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.SubmissionType", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("QL_NhanVien.DataAccess.Entities.User", b =>
                {
                    b.Navigation("ActualSalaries");

                    b.Navigation("EmailConfirmations");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
